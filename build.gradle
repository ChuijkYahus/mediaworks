plugins {
    id "architectury-plugin" version "3.4.+"

    id "dev.architectury.loom" version "1.2.+" apply false

    id "org.jetbrains.kotlin.jvm" version "1.8.0" apply false
}

architectury {
    minecraft = project.minecraftVersion
}

subprojects {
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    javadoc.enabled = false

    dependencies {
        minecraft "com.mojang:minecraft:${project.minecraftVersion}"


        mappings "net.fabricmc:yarn:1.19.2+build.28:v2"

        annotationProcessor "org.ow2.asm:asm:${project.asmVersion}"
        annotationProcessor "org.ow2.asm:asm-analysis:${project.asmVersion}"
        annotationProcessor "org.ow2.asm:asm-commons:${project.asmVersion}"
        annotationProcessor "org.ow2.asm:asm-tree:${project.asmVersion}"
        annotationProcessor "org.ow2.asm:asm-util:${project.asmVersion}"
    }

    sourceSets.main.kotlin.srcDirs += 'src/main/java'
    sourceSets.main.resources.srcDirs += "src/generated/resources"
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    version = project.modVersion
    group = project.mavenGroup

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven {
            url "https://squiddev.cc/maven/"
        }
        maven { url "https://maven.terraformersmc.com/" }
        maven { url "https://maven.terraformersmc.com/releases" }
        maven { url "https://maven.shedaniel.me/" }

        // Hex Casting Dependencies
        maven { url "https://maven.blamejared.com/" }
        maven {
            name "entity reach"
            url "https://maven.jamieswhiteshirt.com/libs-release/"
        }
        maven { url "https://mvn.devos.one/snapshots/" }
        maven {
            name = 'Ladysnake Mods'
            url = 'https://maven.ladysnake.org/releases'
        }
        maven {
            name = 'Kotlin for Forge'
            url = 'https://thedarkcolour.github.io/KotlinForForge/'
        }
        maven {
            url = "https://maven.theillusivec4.top/"
        }
        maven {
            name = 'GeckoLib'
            url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
        }
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }

        // for custom enchantment targets on fabric
        maven {
            name = "Fuzs Mod Resources"
            url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        java.toolchain.languageVersion = JavaLanguageVersion.of(17)
        java.withSourcesJar()
        java.withJavadocJar()
    }

    sourcesJar {
        duplicatesStrategy 'exclude'
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // based on https://github.com/Fuzss/extensibleenums/blob/1.20/build.gradle#L98
    tasks.withType(Jar).configureEach {
        from rootProject.file("LICENSE.md")
        from rootProject.file("CHANGELOG.md")
        manifest {
            attributes([
                    "Specification-Title"           : modName,
                    'Specification-Version'         : modVersion,
                    "Specification-Vendor"          : modAuthor,
                    'Implementation-Title'          : modName,
                    'Implementation-Version'        : modVersion,
                    'Implementation-Vendor'         : modAuthor,
                    'Implementation-Timestamp'      : new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    'Implementation-Timestamp-Milli': System.currentTimeMillis(),
                    'Implementation-URL'            : modSource,
                    'Built-On-Java'                 : "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
                    'Built-On-Minecraft'            : minecraftVersion
            ])
        }
        group 'jar'
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {
        enabled = false
    }

    processResources {
        exclude '.cache'
    }

    processTestResources {
        exclude '.cache'
    }
}

ext.getArtifactId = { platform -> return "$modId-$platform-$minecraftVersion" }

ext.getLatestChangelog = {
    Collection<String> lines = file("$rootDir/CHANGELOG.md").readLines()
    String changelog = ""
    Boolean atSegment = false
    for (String line : lines) {
        if (line.startsWith("## ")) {
            if (atSegment) break // hit next segment
            atSegment = true
        }
        if (atSegment) changelog += "$line\n"
    }
    return changelog.trim()
}

ext.bookPath = "data/mediaworks/patchouli_books/mediaworksbook"

tasks.register("viewLatestChangelog") {
    group "documentation"
    description "Print the topmost single version section from the full CHANGELOG.md file."
    doLast {
        println(getLatestChangelog())
    }
}

tasks.register("generateOnlineNotebookPage") {
    group "documentation"
    description "Pulls the addon's Hex Notebook documentation from the project and generates a page in Hex Casting's online documentation style, at doc/out.html."

    exec {
        workingDir "${rootDir}"
        executable 'python'
        args "doc/collate_data.py", "common/src/main/resources", "doc/HexCastingResources", "mediaworks", "mediaworksbook", "doc/template.html", "doc/out.html"
    }
}
